// Generated by CoffeeScript 1.7.1
var ac, ascii, borkRE, chars, fromASCII, quotemeta, rev, toASCII, uc, unborkRE, unicode, _i, _len;

chars = {
  'a': 'ªàáâãäåāăąǎǟǡả',
  'ae': 'æǣ',
  'b': 'ЬбЪьъѢѣḇﻁḃ',
  'bl': 'Ы',
  'c': '¢çćĉċčςҁ',
  'd': 'ðďđδ∂ḋḏḑ',
  'e': 'ēèéêëĕėęěẻẽ',
  'f': 'ḟϝ',
  'ff': 'ﬀ',
  'fi': 'ﬁ',
  'fl': 'ﬂ',
  'g': 'ĝğġģǥǧǵḡﻕǥ',
  'h': 'ĥħẖḣḧḩЋ',
  'i': 'ìíîïĩīĭįỉϊǐ¡',
  'ij': 'ĳ',
  'j': 'ĵǰﺫﺯ',
  'k': 'ĸḱḵǩ',
  'l': 'ĺļľŀłḻ',
  'm': 'ḿṁ',
  'n': 'ñńņňŉŊŋη∩ṅṉמתή',
  'o': 'ōòóôõöø∅ỏѳσơǒŏő',
  'oe': 'œ',
  'p': 'ṕṗρ',
  'q': '¶۹',
  'r': 'ṙṟѓŗř',
  's': 'ṡﻯﻱﺉϟśŝşš',
  'st': 'ﬆ',
  't': '†ẗṫṯךţťŧ',
  'u': 'ǔưųµùúûü∪ủטџũūŭůű',
  'v': 'ṽעѵνϋύΰ',
  'w': 'ŵẘẇẅẁẃשωώ',
  'x': '×ẍẋχ',
  'y': 'ýÿỳỷỹẙẏўγŷ',
  'z': 'ƶẑẕźżž',
  'A': 'ǠÀÁÂÃÄǞÅĄÅẢ۸ΛΆǍ',
  'AE': 'ÆǢ',
  'B': 'ßḂḆ',
  'C': 'ÇĆĈĊČ℃ҀϚ',
  'D': 'ÐĎḊḎḐ',
  'E': 'ÈÉÊËĒ∑Σ∈€ẼﻉﻍξЄΈ',
  'F': '℉Ḟ',
  'G': 'ĜĞĠĢḠǤǴ',
  'H': 'ĤĦḢḦḨΉ',
  'I': 'ÌÍÎÏⅠỈΊǏ',
  'II': 'Ⅱ',
  'III': 'Ⅲ',
  'IV': 'Ⅳ',
  'IX': 'Ⅸ',
  'J': 'ﻙﻝ',
  'K': 'ĶKḰḴǨ',
  'L': '£₤ĹĻĽĿŁ∟Ḻ',
  'M': 'ḾṀ',
  'N': 'ÑŃŅŇṄṈИЙ',
  'Ni': '№',
  'O': 'ŌΌÒÓÔÕÖØỎѲϴΘƠǑŐ',
  'P': 'Ṗ',
  'Q': 'ϘǬǪ',
  'R': 'ṞṘЯƦŔŖŘ',
  'S': '§∮∫ṠŚŜŞŠ',
  'SS': '∬',
  'T': 'ṪṮŢŤŦ',
  'U': 'ƯŲÙÚÛÜỦǓŨŪŬŮŰ',
  'V': '√ⅤṼ۷Ѵ',
  'VI': 'Ⅵ',
  'VII': 'Ⅶ',
  'VIII': 'Ⅷ',
  'W': '₩ẆẄẀẂШЩŴ',
  'X': 'ⅩẌẊ',
  'XI': 'Ⅺ',
  'XII': 'Ⅻ',
  'Y': 'ΎΫ¥ÝỲỶỸẎУЧŶ',
  'Z': 'ƵẔẐŹŻŽ',
  '1': 'ı',
  '3': '∋∃ЭǮǯƷ',
  '8': '☃',
  '1/4': '¼',
  '1/2': '½',
  '3/4': '¾',
  '4/5': '⅘',
  '1/6': '⅙',
  '5/6': '⅚',
  '1/8': '⅛',
  '3/8': '⅜',
  '5/8': '⅝',
  '7/8': '⅞',
  '1/3': '⅓',
  '2/3': '⅔',
  '1/5': '⅕',
  '2/5': '⅖',
  '3/5': '⅗',
  '<<': '«',
  '>>': '»',
  '+': '÷₊',
  '+-': '±∓',
  '-+': '±∓',
  '|': '¦ﺁﺃﺇﺍ',
  '||': '∥‖',
  ',': '¸‚،˛',
  ';': '؛',
  ',,': '„',
  '-': '­¯−₋‐–—―',
  '--': '‥',
  "'": '´‘’‛′‵י',
  '.': '·∙',
  '?': '¿؟',
  '::': '∷',
  ':': '∶',
  '*': '∗',
  '=': '₌‗',
  '(': '₍',
  ')': '₎',
  '%': '℅',
  '"': '“”‟″‶˝',
  '/': '⁄'
};

rev = {};

for (ascii in chars) {
  unicode = chars[ascii];
  for (_i = 0, _len = unicode.length; _i < _len; _i++) {
    uc = unicode[_i];
    rev[uc] = ascii;
  }
}

quotemeta = function(s) {
  return s.replace(/[^\w\s,'":;=&%#@!~`-]/g, function(m) {
    return "\\" + m[0];
  });
};

unborkRE = new RegExp(((function() {
  var _results;
  _results = [];
  for (uc in rev) {
    _results.push(quotemeta(uc));
  }
  return _results;
})()).join('|'), 'g');

borkRE = new RegExp(((function() {
  var _results;
  _results = [];
  for (ac in chars) {
    _results.push(ac);
  }
  return _results;
})()).sort(function(a, b) {
  return b.length - a.length;
}).map(quotemeta).join('|'), 'g');

toASCII = function(str) {
  return str.replace(unborkRE, function(_arg) {
    var c;
    c = _arg[0];
    return rev[c];
  });
};

fromASCII = function(str) {
  return str.replace(borkRE, function(_arg) {
    var c;
    c = _arg[0];
    return chars[c][Math.floor(Math.random() * chars[c].length)];
  });
};

module.exports = {
  toASCII: toASCII,
  fromASCII: fromASCII
};
